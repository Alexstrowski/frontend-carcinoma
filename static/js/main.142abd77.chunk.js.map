{"version":3,"sources":["components/Card.jsx","components/Image.jsx","components/Result.jsx","utils/index.js","plugins/axios.js","components/UploadFileContainer.jsx","App.js","index.js"],"names":["Card","children","className","Image","image","src","URL","createObjectURL","alt","name","id","formatNumber","number","Result","prediction","isLoading","bcc","nobcc","getBase64Image","dataURL","getExtension","replace","substring","indexOf","axiosClient","axios","create","baseURL","process","headers","UploadFileContainer","updateImage","updatePrediction","setIsLoading","useState","undefined","selectedFile","setSelectedFile","type","onChange","event","target","files","onClick","params","reader","FileReader","readAsDataURL","onload","e","a","result","base64Image","payload","post","response","data","prediccion","disabled","App","setImage","setPrediction","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.142abd77.chunk.js","sourcesContent":["const Card = ({ children }) => {\r\n  return (\r\n    <div className=\"rounded-3xl shadow-lg w-full my-16 bg-white\">\r\n      <div className=\"px-8 py-12\">\r\n        <div className=\"text-gray-700 text-base\">{children}</div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const Image = ({ image }) => {\r\n  return (\r\n    <div className=\"w-1/3 mr-8\">\r\n      <p className=\"text-2xl mb-4\">Imagen</p>\r\n      <div className=\"border-4 border-blue-600 h-96\">\r\n        {image ? (\r\n          <img\r\n            src={URL.createObjectURL(image)}\r\n            alt={image.name}\r\n            className={\"w-full h-full\"}\r\n            data-testid=\"image-box\"\r\n            id=\"photo-uploader\"\r\n          />\r\n        ) : (\r\n          <div className=\"text-gray-400 text-4xl flex justify-center items-center h-full\">\r\n            No hay imagen cargada\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Image;\r\n","const Result = ({ prediction, isLoading }) => {\r\n  return (\r\n    <div className=\"w-2/3\">\r\n      <p className=\"text-2xl mb-4\">Resultados</p>\r\n      <div className=\"border-4 border-blue-600 h-96 flex flex-col justify-center items-center text-2xl\">\r\n        {prediction.bcc !== null ? (\r\n          <div>\r\n            <p className=\"mb-4\">\r\n              Es carcinoma basocelular: {formatNumber(prediction.bcc)}\r\n            </p>\r\n            <p>No es carcinoma basocelular: {formatNumber(prediction.nobcc)}</p>\r\n          </div>\r\n        ) : isLoading ? (\r\n          <div className=\"text-gray-400 text-4xl flex justify-center items-center h-full\">\r\n            Cargando...\r\n          </div>\r\n        ) : (\r\n          <div className=\"text-gray-400 text-4xl flex justify-center items-center h-full\">\r\n            Aún no hay resultados\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst formatNumber = (number) => {\r\n  return `${number * 100} %`;\r\n};\r\n\r\nexport default Result;\r\n","export const getBase64Image = (dataURL) => {\r\n  const extension = getExtension(dataURL);\r\n  const base64Image =\r\n    extension === \"png\"\r\n      ? dataURL.replace(\"data:image/png;base64,\", \"\")\r\n      : dataURL.replace(\"data:image/jpeg;base64,\", \"\");\r\n  return base64Image;\r\n};\r\n\r\nexport const getExtension = (dataURL) => {\r\n  return dataURL.substring(\r\n    dataURL.indexOf(\"/\") + 1,\r\n    dataURL.indexOf(\";base64\")\r\n  );\r\n};\r\n","import axios from \"axios\";\r\n\r\nconst axiosClient = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_URL,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default axiosClient;\r\n","import { useState } from \"react\";\r\nimport { getBase64Image } from \"../utils\";\r\nimport axiosClient from \"../plugins/axios\";\r\n\r\nconst UploadFileContainer = ({\r\n  updateImage,\r\n  updatePrediction,\r\n  setIsLoading,\r\n}) => {\r\n  const [selectedFile, setSelectedFile] = useState(undefined);\r\n\r\n  const handleInputFile = (event) => {\r\n    if (event.target.files && event.target.files[0]) {\r\n      setSelectedFile(event.target.files[0]);\r\n      updateImage(event.target.files[0]);\r\n    }\r\n  };\r\n\r\n  const handleFileUpload = (params) => {\r\n    let reader = new FileReader();\r\n    reader.readAsDataURL(selectedFile);\r\n\r\n    reader.onload = async function (e) {\r\n      let dataURL = reader.result;\r\n      const base64Image = getBase64Image(dataURL);\r\n      const payload = {\r\n        image: base64Image,\r\n      };\r\n      setIsLoading(true);\r\n      const response = await axiosClient.post(\"/predict\", payload);\r\n      setIsLoading(false);\r\n      updatePrediction(response.data.prediccion);\r\n    };\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-8 text-center\">\r\n      <input\r\n        type=\"file\"\r\n        onChange={handleInputFile}\r\n        data-testid=\"fileInput\"\r\n        className=\"mr-4\"\r\n      />\r\n      <button\r\n        className=\"bg-blue-500 disabled:opacity-10 text-white font-bold py-2 px-4 rounded\"\r\n        onClick={handleFileUpload}\r\n        disabled={!selectedFile}\r\n      >\r\n        Predecir\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadFileContainer;\r\n","import \"./App.css\";\nimport { useState } from \"react\";\nimport { Card, Image, Result, UploadFileContainer } from \"./components\";\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [prediction, setPrediction] = useState({\n    bcc: null,\n    nobcc: null,\n  });\n  const [isLoading, setIsLoading] = useState(false);\n  return (\n    <div className=\"container mx-auto\">\n      <p className=\"text-6xl mt-8 text-center\">\n        Predicción del carcinoma basocelular\n      </p>\n      <p className=\"text-3xl mt-8 text-center text-gray-600\">\n        Cargar la imagen en formato .png o .jpg\n      </p>\n      <UploadFileContainer\n        updateImage={setImage}\n        updatePrediction={setPrediction}\n        setIsLoading={setIsLoading}\n      />\n      <Card>\n        <div className=\"flex\">\n          <Image image={image} />\n          <Result prediction={prediction} isLoading={isLoading} />\n        </div>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}